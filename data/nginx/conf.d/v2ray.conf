server{
    server_tokens off;
    listen 80;
    listen [::]:80;
    server_name abc.abc.com;

    location / 
    {
        return 301 https://abc.abc.com:443$request_uri;
    }
}

server {
    listen 443 ssl http2;
	listen [::]:443 ssl http2;
    server_name abc.abc.com;

    ssl_certificate /etc/letsencrypt/live/abc.abc.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/abc.abc.com/privkey.pem;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_ecdh_curve secp384r1;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    root /usr/share/nginx/html;

   location = /robots.txt 
   {}
	
    location / 
    {
        proxy_ssl_server_name on;
        proxy_pass https://www.google.com/;
        proxy_set_header Accept-Encoding '';
        sub_filter "www.google.com" "abc.abc.com";
        sub_filter_once off;
    }

        location /88cwrtwtwt40ffc {
        proxy_pass http://xray:35625;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
		# Show realip in v2ray access.log
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
	
    location /832gfretwert4f5ac6f12 {
        proxy_redirect off;
        proxy_pass http://v2ray:23356;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
    }
    
#        location /sub {
#                root /usr/share/nginx/html;
#                try_files $uri $uri/ =404;
#        }

###### using sub-directory for reverse proxy ######

#	location /abc/ {
#        proxy_pass http://abc:2550/;
#        proxy_buffering                      off;
#        proxy_set_header Host                $http_host;
#        proxy_set_header X-Real-IP           $remote_addr;
#        proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto   $scheme;
#    }
	#    ## bitwarden section
	#      
	#    location /bwd/ 
	#     {
	#    proxy_pass http://bitwarden:80;
	#    proxy_set_header Host $host;
	#    proxy_set_header X-Real-IP $remote_addr;
	#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	#    proxy_set_header X-Forwarded-Proto $scheme;
	#  }
	#  
	#  location /bwd/notifications/hub
	#     {
	#    proxy_pass http://bitwarden:3012;
	#    proxy_set_header Upgrade $http_upgrade;
	#    proxy_set_header Connection "upgrade";
	#  }
	#  
	#  location /bwd/notifications/hub/negotiate
	#     {
	#    proxy_pass http://bitwarden:80;
	#  }
	# 
	#  # Optionally add extra authentication besides the AUTH_TOKEN
	#  # If you don't want this, leave this part out
	#  location /bwd/admin
	#     {
	#    # See: https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/
	#    auth_basic "bitwarden admin area";
	#    auth_basic_user_file /usr/share/nginx/html/.htpasswd;
	# 
	#    proxy_set_header Host $host;
	#    proxy_set_header X-Real-IP $remote_addr;
	#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	#    proxy_set_header X-Forwarded-Proto $scheme;
	# 
	#    proxy_pass http://bitwarden:80;
	#  }
}
